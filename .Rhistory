#Added sugar to coffee, tea, milk, and added flavour to milk not included as SSB # Ver si leche preparada sí o no y aguas de fruta con azúcar
ffqfoods$ssb[c(20,49,78,101,102)]  <- 0 #quité leche (102) para sacar consumo de Tona
#Combine folio (home identifier) and intp (individual identifier)
ensanut$identifier <- factor(paste0("folio_",ensanut$folio,"__intp_",ensanut$intp))
individuals        <- unique(ensanut$identifier)
#Get ssbs
ssb           <- ffqfoods$x[which(ffqfoods$ssb == 1)]
#Variables in reduced database
ensavars      <- c("identifier","entidad","code_upm",
"est_var","pondef","indicef",
"nse4f","nse5f","area","region",
"sexo","edadanos")
which(ensanut$alimento %in% ssb)
ssb
ensanut$alimento
install.packages("readstata13")
library(readstata13)
##ENSANUT
#Read .dta files
ensanut       <- read.dta13(paste0(dir,datadir,"/frecuencia_adultos_nutrimentos.dta"))
View(ensanut)
# Siempre limpiar nuestro environment
rm(list=ls())
setwd("~/Documents/GitHub/Rbasico/labs")
# Donde yo tengo mis cosas
setwd("~/Documents/GitHub/Rbasico")
getwd()
library(haven)
Antropometria <- read_dta("files/Antropometria.dta")
View(Antropometria)
# Abrir base y explorar base de datos =========================
Antropometria <- read_dta("files/Antropometria.dta")
class(Antropometria)
dim(Antropometria)
names(Antropometria)
Antropometria$sexo
Antropometria$edad
Antropometria$edad_i
glimpse(Antropometria)
# Seleccionar solo las columnas que me interesan
Antropometria[, 1] # seleccionar la primera columna
Antropometria[, 1:4] # seleccionar las primeras 4 columnas
Antropometria[, "peso"] #seleccionar usando nombre de columna
Antropometria[, c("peso","altura")] #seleccionar mas de una columna usando nombre de columnas
names(Antropometria)
Antropometria[, 1] # seleccionar la primera columna
Antropometria[, 1:4] # seleccionar las primeras 4 columnas
Antropometria[, "peso"] #seleccionar usando nombre de columna
Antropometria[, c("peso","talla")] #seleccionar mas de una columna usando nombre de columnas
# Si quiero guardar los resultados recuerda asignar un nombre
antro_mini <- Antropometria[, c("peso","talla")]
# Siempre limpiar nuestro environment
rm(list=ls())
# Instalar paquetes
#install.packages("nombre de paquete") # esto solo hacerlo una vez en la vida!!!!!
#library(tidyverse) # llamar paquete
#library(survey) #llamar paquete
#library(rio)
# library(haven)
# Donde yo tengo los archivos que estare usando
setwd("~/Documents/GitHub/Rbasico")
# Verificar
getwd()
# Abrir base y explorar base de datos =========================
# SOLO PARA DEMOSTRACION NO CORRER
# Leer csv
#Leer libro de excel
data_list <- import_list("files/out_agecat_reclassifed1_weighted_2021.xlsx", setclass = "tbl")
# Instalar paquetes
#install.packages("nombre de paquete") # esto solo hacerlo una vez en la vida!!!!!
#library(tidyverse) # llamar paquete
#library(survey) #llamar paquete
library(rio)
#Leer libro de excel
data_list <- import_list("files/out_agecat_reclassifed1_weighted_2021.xlsx", setclass = "tbl")
data_list[[1]]
# SOLO PARA DEMOSTRACION NO CORRER
# Leer csv
data <- read_csv("files/out_agecat_reclassifed1_weighted_2021.xlsx")
# SOLO PARA DEMOSTRACION NO CORRER
# Leer csv
data <- read_excel("files/out_agecat_reclassifed1_weighted_2021.xlsx")
library(readxl)
# SOLO PARA DEMOSTRACION NO CORRER
# Leer csv
data <- read_excel("files/out_agecat_reclassifed1_weighted_2021.xlsx")
View(data)
# Seleccionar solo las filas que me interesan
# Paso 1. Establecer caracteristica que deseo
# funcion which nos devuelve un vector logico
which(Antropometria$peso > 60)
# Leer dta
Antropometria <- read_dta("files/Antropometria.dta")
# Seleccionar solo las filas que me interesan
# Paso 1. Establecer caracteristica que deseo
# funcion which nos devuelve un vector logico
which(Antropometria$peso > 60)
# Paso 2. Usar estructura para seleccionar valores
Antropometria[which(Antropometria$peso > 60),]
#Nota: Podemos usar mas de una operacion logica
# & significa que debe cumplir todas las condiciones
# | significa que puede cumplir cualquiera de las dos condiciones
Antropometria[which(Antropometria$peso > 60 & Antropometria$edad >60),]
Antropometria[which(Antropometria$peso > 60 | Antropometria$edad >60),]
# Crear una nueva variable
# Inicializar una variable vacia
Antropometria$edad_cat <- rep(NA, nrow(Antropometria))
Antropometria$edad_cat <- NA # es equivalente
# Reescribir variable anterior en funcion a otras columnas
Antropometria$edad_cat <- age
Antropometria$edad_cat[Antropometria$edad<30] <- "20’s"
Antropometria$edad_cat[Antropometria$edad>=30 & Antropometria$edad<40] <- "30’s"
Antropometria$edad_cat[Antropometria$edad>=40 & Antropometria$edad<50] <- "40’s"
Antropometria$edad_cat[Antropometria$edad>=50 & Antropometria$edad<60] <- "50’s"
Antropometria$edad_cat[Antropometria$edad>=60 & Antropometria$edad<70] <- "60’s"
Antropometria$edad_cat[Antropometria$edad>=70 & Antropometria$edad<80] <- "70’s"
Antropometria$edad_cat[Antropometria$edad>=80] <- "80’s"
View(Antropometria)
Antropometria[, c("edad", "edad_cat")]
# Contar observaciones de variables
Antropometria$sexo
# Usar factor
factor(Antropometria$sexo, levels = c(1,2), labels = c("H", "M"))
# Crear una nueva variable
# Inicializar una variable vacia
Antropometria$sexo_lab <- NA
# Crear una nueva variable
# Inicializar una variable vacia
Antropometria$sexo_lab <- rep(NA, nrow(Antropometria))
# Funcion ifelse
Antropometria$sexo_lab <- ifelse(Antropometria$sexo == 1, "Hombre",
"Mujer")
Antropometria$sexo_lab
Antropometria$edad_cat[which(Antropometria$edad<30)] <- "20’s"
#Nota: Podemos usar mas de una operacion logica
# & significa que debe cumplir todas las condiciones
# | significa que puede cumplir cualquiera de las dos condiciones
Antropometria[Antropometria$peso > 60 & Antropometria$edad >60,]
tab(Antropometria$sexo)
# Contar observaciones de variables
# funcion tab
table(Antropometria$sexo)
View(Antropometria)
View(Antropometria)
# Siempre limpiar nuestro environment
rm(list=ls())
sort(micaracter, decreasing = T)
micaracter <- c("Bajo", "Medio", "Alto", "Muy alto")
sort(micaracter, decreasing = T)
micaracter <- sort(micaracter, decreasing = T)
# Siempre limpiar nuestro environment
rm(list=ls())
detach(rio)
detach("rio")
install.packages("tidyverse")
install.packages("tidyverse")
# Instalar paquetes
#install.packages("nombre de paquete") # esto solo hacerlo una vez en la vida!!!!!
library(tidyverse) # llamar paquete
library(readxl)
#library(survey) #llamar paquete
#library(rio)
#library(readxl)
# library(haven)
# Donde yo tengo los archivos que estare usando
setwd("~/Documents/GitHub/Rbasico")
miexcel <- read_excel("files/out_agecat_reclassifed1_weighted_2021.xlsx")
View(miexcel)
library(haven)
# Leer dta
Antropometria <- read_dta("files/Antropometria.dta")
# SOLO PARA DEMOSTRACION NO CORRER
# Leer csv
data <- read_excel("files/out_agecat_reclassifed1_weighted_2021.xlsx")
#library(survey) #llamar paquete
library(rio)
#Leer libro de excel
data_list <- import_list("files/out_agecat_reclassifed1_weighted_2021.xlsx", setclass = "tbl")
View(data_list)
data_list[[1]] #seleccionar primera hoja de calculo
View(data_list)
data_list$agecat_1
class(Antropometria)
dim(Antropometria)  #ver dimension de dataframe
names(Antropometria) #ver variables que tengo en dataframe
nrow(Antropometria)  #ver cuantas filas
dim(Antropometria)  #ver dimension de dataframe
nrow(Antropometria)  #ver cuantas filas
# head()  #ver los primeros datos
# length() # examinar una columna
ncol(Antropometria)   # ver cuantas columnas hay
head(Antropometria)  #ver los primeros datos
head(Antropometria, n = 86000)
head(Antropometria, n = 100000)
head(Antropometria, n = 10)  #ver los primeros datos
tail(Antropometria, n = 10)  # ver los ultimos 10 datos
length(Antropometria$folio)
Antropometria$sexo
length(Antropometria$folio) # examinar una columna
# numerico a categorico
Antropometria$sexo
class(Antropometria$sexo)
View(Antropometria)
names(Antrometria)
names(Antropometria)
Antropometria$sexo
# numerico a categorico
as.character(Antropometria$sexo) # cambiar a caracter
Antropometria$sexo
Antropometria$intp
Antropometria$entidad
as.numeric(Antropometria$entidad)
Antropometria$sex
Antropometria$sexo
# numerico a categorico
#Antropometria$sexo <- as.character(Antropometria$sexo) # cambiar a caracter
# Usar factor
factor(Antropometria$sexo, levels = c(2,1), labels = c("M", "H"))
# numerico a categorico
#Antropometria$sexo <- as.character(Antropometria$sexo) # cambiar a caracter
# Usar factor
Antropometria$sexo_fac <- factor(Antropometria$sexo, levels = c(2,1), labels = c("M", "H"))
names(Antropometria)
# Summary statistics ======================================
# Estas funciones vienen predeterminadas en R
# Aplicar a una columna
Antropometria$edad
mean(Antropometria$edad) # para vectores
median(Antropometria$edad)
hist(Antropometria$edad)
quantile(Antropometria$edad)
quantile(data, probs = seq(0, 1, 1/5))
quantile(data, probs = seq(0, 1, 1/5), na.rm = TRUE)
quantile(Antropometria$edad, probs = seq(0, 1, 1/5))
sd(Antropometria$edad)
summary(Antropometria$edad)
# Contar observaciones de variables
# funcion table
table(Antropometria$sexo)
table(Antropometria$edad)
table(Antropometria$edad, exclude = NULL)
table(Antropometria$sexo, exclude = NULL)
is.na(Antropometria$sexo)
table(is.na(Antropometria$sexo)) #
Antropometria[, 1]
Antropometria[, 1:4]
Antropometria[, "peso"] #seleccionar usando nombre de columna
Antropometria[, c("peso","talla")] #seleccionar mas de una columna usando nombre de columnas
# Si quiero guardar los resultados recuerda asignar un nombre
antro_mini <- Antropometria[, c("peso","talla")]
View(antro_mini)
Antropometria$peso > 60
# Seleccionar solo las filas que me interesan
# Paso 1. Establecer caracteristica que deseo
# funcion which:
# input operacion logica (condicion/caracteristica que necesitamos)
# output  un vector logico
which(Antropometria$peso > 60)
View(antro_mini)
Antropometria$peso > 60
# Paso 2. Usar estructura para seleccionar valores
Antropometria[which(Antropometria$peso > 60),]
# Paso 3. Si lo deseo guardar nuestro resultado
peso60 <- Antropometria[which(Antropometria$peso > 60),]
which(Antropometria$peso > 60)
# Paso 2. Usar estructura para seleccionar valores
Antropometria[which(Antropometria$peso > 60),]
#Nota: Podemos usar mas de una operacion logica
#condicion1 & condicion2
# & significa que debe cumplir todas las condiciones
# | significa que puede cumplir cualquiera de las dos condiciones
#condicion1 | condicion2
Antropometria[which(Antropometria$peso > 60 & Antropometria$edad >60),]
Antropometria[which(Antropometria$peso > 60 | Antropometria$edad >60),]
#Nota: Podemos usar mas de una operacion logica
#condicion1 & condicion2
# & significa que debe cumplir todas las condiciones
# | significa que puede cumplir cualquiera de las dos condiciones
#condicion1 | condicion2
pesoedad60 <- Antropometria[which(Antropometria$peso > 60 & Antropometria$edad >60),]
View(peso60)
Antropometria$talla
# Crear una nueva variable
Antropometria$mi_imc <- Antropometria$peso/(Antropometria$talla/100)^2
Antropometria$mi_imc
# Inicializar una variable vacia
Antropometria$sexo_lab <- rep(NA, nrow(Antropometria))
# Inicializar una variable vacia
Antropometria$sexo_lab <- NA
Antropometria$sexo_lab
nrow(Antropometria)
Antropometria$sexo_lab <- rep(NA, nrow(Antropometria))
Antropometria$sexo_lab
Antropometria$sexo_lab
# Reescribir variable anterior en funcion a otra columna (sexo)
Antropometria$sexo_lab[Antropometria$sexo == 1] <- "Hombre"
Antropometria$sexo_lab[Antropometria$sexo == 2] <- "Mujer"
Antropometria$sexo_lab <- rep(NA, nrow(Antropometria))
table(Antropometria$sexo_lab)
table(Antropometria$sexo_lab, exclude = NULL)
# Reescribir variable anterior en funcion a otra columna (sexo)
Antropometria$sexo_lab[Antropometria$sexo == 1] <- "Hombre"
Antropometria$sexo_lab[Antropometria$sexo == 2] <- "Mujer"
table(Antropometria$sexo_lab, exclude = NULL)
# Funcion ifelse
Antropometria$sexo_lab <- rep(NA, nrow(Antropometria))
table(Antropometria$sexo_lab, exclude = NULL)
Antropometria$sexo_lab <- ifelse(Antropometria$sexo == 1, "Hombre",
"Mujer")
table(Antropometria$sexo_lab, exclude = NULL)
Antropometria$edad_cat <- rep(NA, nrow(Antropometria))
Antropometria$edad_cat[Antropometria$edad<30] <- "20’s"
table(Antropometria$edad_cat, exclude = NULL)
Antropometria$edad_cat[Antropometria$edad>=30 & Antropometria$edad<40] <- "30’s"
Antropometria$edad_cat[Antropometria$edad>=40 & Antropometria$edad<50] <- "40’s"
Antropometria$edad_cat[Antropometria$edad>=50 & Antropometria$edad<60] <- "50’s"
Antropometria$edad_cat[Antropometria$edad>=60 & Antropometria$edad<70] <- "60’s"
Antropometria$edad_cat[Antropometria$edad>=70 & Antropometria$edad<80] <- "70’s"
Antropometria$edad_cat[Antropometria$edad>=80] <- "80’s"
table(Antropometria$edad_cat, exclude = NULL)
ver <- Antropometria[, c("edad","edad_cat")]
View(ver)
library(tidyverse)
glimpse(Antropometria)
x <- rnorm(10)
x
x %>% max  # a x aplica la funcion max()
max(x)
mini_antro2 <- select(Antropometria, peso, talla)
View(mini_antro2)
View(antro_mini)
# con pipes
mini_antro_pipes <- Antropometria %>% select(peso, talla)
View(mini_antro_pipes)
library(purrr)
# Seleccionar solo las filas que me interesan
# Paso 1. Establecer caracteristica que deseo
peso60 <- filter(Antropometria, peso > 60)
View(peso60)
peso60 <- Antropometria[Antropometria$peso > 60, ]
# con pipes
peso60_pipes <- Antropometria %>% filter(peso > 60)
View(peso60_pipes)
detach("purr")
# con pipes
peso60_pipes <- Antropometria %>% dplyr::filter(peso > 60)
peso60 <- Antropometria[Antropometria$peso > 60, ]
# Seleccionar solo las filas que me interesan
# Paso 1. Establecer caracteristica que deseo
peso60 <- filter(Antropometria, peso > 60)
#Nota: Podemos usar mas de una operacion logica
# & significa que debe cumplir todas las condiciones
# | significa que puede cumplir cualquiera de las dos condiciones
pesoedad60 <- filter(Antropometria, peso > 60 & edad >60)
pesoedad60 <- filter(Antropometria, peso > 60, edad >60)
apesoedad60 <- filter(Antropometria, peso > 60 | edad >60) # al menos una
Antropometria$uno <- mutate(Antropometria, 1)
Antropometria$uno <- dplyr::mutate(Antropometria, 1)
Antropometria$uno
table(Antropometria$uno)
Antropometria <- dplyr::mutate(Antropometria, uno = 1)
# Base                   # nueva columna
Antropometria$uno <- dplyr::mutate(Antropometria, uno = 1)
# Leer dta
Antropometria <- read_dta("files/Antropometria.dta")
# Base                   # nueva columna
Antropometria$uno <- dplyr::mutate(Antropometria, uno = 1)
Antropometria$uno
table(Antropometria$uno)
detach("purrr")
Antropometria %>% mutate(uno = 1)
Antropometria %>% dplyr::mutate(uno = 1)
ver <- Antropometria %>% dplyr::mutate(uno = 1)
View(ver)
Antropometria <- Antropometria %>% dplyr::mutate(uno = 1)
Antropometria <- dplyr::mutate(Antropometria, dos = 2)
View(Antropometria)
Antropometria$tres <- rep(3, nrow(Antropometria))
Antropometria$tres <- 3
# Inicializar una variable vacia
Antropometria <- mutate(Antropometria, mi_imc = peso/((talla)/100)^2)
# con pipes
Antropometria <- Antropometria %>% mutate(mi_imc2 = peso/((talla)/100)^2)
View(Antropometria)
# Funcion case_when
Antropometria <- mutate(Antropometria,
sexo_lab2 = case_when(sexo == 1 ~ "Hombre",
sexo == 2 ~"Mujer"))
Antropometria$sexo_lab <- ifelse(Antropometria$sexo == 1, "Hombre",
"Mujer")
# Podemos usarlo para mas de una categoria
Antropometria <- mutate(Antropometria,
edad_cat = case_when(edad < 20 ~ "20s",
edad >= 20 & edad <50 ~ "Adultez",
edad >= 50 ~ "50+"))
table(Antropometria$edad_cat, exclude = NULL)
Antropometria <- Antropometria %>%
mutate(edad_cat_pipe = case_when(edad < 20 ~ "20s",
edad >= 20 & edad <50 ~ "Adultez",
edad >= 50 ~ "50+"))
table(Antropometria$edad_cat_pipe, exclude = NULL)
table(Antropometria$edad_cat, exclude = NULL)
View(mini_antro_pipes)
# Exportar datos ======================================
# save
write_dta(mini_antro, "/files/mini_antro.dta")
View(mini_antro_pipes)
# Exportar datos ======================================
# save
write_dta(mini_antro_pipes, "/files/mini_antro.dta")
setwd("~/Documents/GitHub/Rbasico/labs")
# Exportar datos ======================================
# save
write_dta(mini_antro_pipes, "~/Documents/GitHub/Rbasico/mini_antro.dta")
write_csv(mini_antro_pipes, "~/Documents/GitHub/Rbasico/mini_antro.csv")
save(mini_antro_pipes, "~/Documents/GitHub/Rbasico/mini_antro.rda")
save(mini_antro_pipes, file = "~/Documents/GitHub/Rbasico/mini_antro.rda")
# Siempre limpiar nuestro environment
rm(list=ls())
library(tidyverse) # llamar paquete
library(haven)
# Donde yo tengo los archivos que estare usando
setwd(path = "~/Documents/GitHub/Rbasico")
# Siempre limpiar nuestro environment
rm(list=ls())
library(tidyverse) # llamar paquete
library(haven)
# Donde yo tengo los archivos que estare usando
setwd("~/Documents/GitHub/Rbasico")
# Verificar
getwd()
# Abrir base  ==========================================
# Yo tengo guardada la base aqui:
Antropometria <- read_dta("files/Antropometria.dta")
plot(Antropometria$edad, Antropometria$talla)
plot(Antropometria$edad, Antropometria$talla)
summary(Antropometria$talla)
plot(Antropometria$edad, Antropometria$talla[!is.na(Antropometria$talla])
plot(Antropometria$edad, Antropometria$talla[!is.na(Antropometria$talla)])
plot(Antropometria$edad, Antropometria$talla)
antro_mini <- select(Antropometria, edad, talla)
View(antro_mini)
?plot
barplot(table(Antropometria$sexo))
View(antro_mini)
antro_mini <- filter(antro_mini, talla < 222.2)
plot(Antropometria$edad, Antropometria$talla)
plot(antro_mini$edad, antro_mini$talla)
View(antro_mini)
antropometria <- Antropometria %>%
filter(talla < 222.2) %>%
select(peso, talla)
View(antropometria)
antropometria <- Antropometria %>%
filter(talla < 222.2) %>%
select(edad, talla)
View(antropometria)
antropometria <- Antropometria %>%
filter(talla != 222.2) %>%
select(edad, talla)
View(antropometria)
antropometria$talla
# Siempre limpiar nuestro environment
rm(list=ls())
library(tidyverse) # llamar paquete
library(haven)
# Donde yo tengo los archivos que estare usando
setwd("~/Documents/GitHub/Rbasico")
# Verificar
getwd()
# Abrir base  ==========================================
# Yo tengo guardada la base aqui:
Antropometria <- read_dta("files/Antropometria.dta")
#Antropometria <- read_dta("tus carpeta/Antropometria.dta")
# Graficas =============================================
#1. Usando paquete graphics (precargado en r)
# plot
# ejemplo facil
# Usando talla y edad de base
antropometria <- Antropometria %>%
filter(talla < 222.2) %>%
select(edad, talla)
View(antropometria)
Antropometria %>%
filter(talla < 222.2)
antropometria <- Antropometria %>%
filter(talla < 222.2)
View(antropometria)
antropometria <- Antropometria %>%
filter(talla < 222.2) %>%
select(edad, talla)
View(antropometria)
antropometria <- Antropometria[talla < 222.2,] %>%
select(edad, talla)
View(Antropometria)
antropometria <- Antropometria[Antropometria$talla < 222.2,] %>%
select(edad, talla)
View(antropometria)
Antropometria$talla < 222.2
table(Antropometria$talla < 222.2)
table(Antropometria$talla <= 222.2)
table(Antropometria$talla ==222.2)
222.2
antropometria <- Antropometria[Antropometria$talla !=
222.2,] %>%
select(edad, talla)
Antropometria[Antropometria$talla !=
222.2,]
table(which(Antropometria$talla !=
222.2))
table((Antropometria$talla ==
222.2))
